2066 год.

Центральное телевидение ведет репортаж с торжественного мероприятия посвященного 50-летию проекта Матфак.Контест. 
Первый этап этого популярного ныне конкурса стартовал в далеком 2016 году в старинном русском городе Ярославле на математическом факультете ЯрГУ. 
Организаторы мероприятия пригласили к себе в гости всех участников контеста, на входе каждому вручалась табличка с одним числом – количеством набранных баллов, равных количеству решенных задач. 
Расположили участников в порядке возрастания набранных ими баллов. Репортер решил узнать, сколько участников турнира набрали определенное количество баллов. 
К сожалению, он не оканчивал МатФак и вообще плохо считал. 
Поэтому он обратился к нынешнему первокурснику с просьбой написать программу, которая поможет ему в решении сложной задачи этого подсчета.

Формат ввода
В первой строке содержится единственное число N (0 ≤ N ≤ 1000000) — количество приглашенных участников Матфак.Контест. 
В следующей строке через пробел находятся N упорядоченных по возрастанию чисел — их баллы(каждое число не более 109). 
В третьей строке записано число M (0 ≤ M ≤ 200000) — количество запросов вашей программе, в следующей строке через пробел записаны M целых неотрицательных чисел ( не превышающих 109+1) баллы, про которые необходимо сказать какое количество участников их набрало.

Формат вывода
Выходной файл должен содержать M строчек. Для каждого запроса выведите число участников, набравших данный балл.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace z3
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());
            int[] ff = new int[n+1];
            int h = 0;
            int cxet = 0;
            int z = 0;
            int qu = 0;

            string[] kk = Console.ReadLine().Split();
            ff[0] = -500;
            for (int y = 0; y < n; y++)
            {
                ff[y+1] = int.Parse(kk[y]);
            }
            int f = int.Parse(Console.ReadLine());
            int[] gg = new int[f];
            int[] lk = new int[f];
            string[] ll = Console.ReadLine().Split();
            for (int w = 0; w < f; w++)
            {
                gg[w] = int.Parse(ll[w]);
            }
            for (int u = 0; u < f; u++)
            { 
                z = Array.BinarySearch(ff, gg[u]);
                {
                    cxet = 0;
                    for (int p = z-1; p < n+1; p--)
                    {
                        if (z <= 0) break;
                        if (gg[u] == ff[p]) cxet += 1;
                        if (gg[u] > ff[p]) break;
                    }
                    for (int l = z; l < n + 1; l++)
                    {
                        if (z <= 0) break;
                        if (gg[u] == ff[l]) cxet += 1;
                        if (gg[u] < ff[l]) break;
                    }
                    lk[u] = cxet;
                }
            }
            for (int i = 0; i < f; i++)
                Console.WriteLine(lk[i]);
            Console.ReadKey();
        }
    }
}



