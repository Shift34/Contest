Пора Кроту пообедать. Его друг Сурок приготовил вкусный обед.

Сурок принес Кроту n упорядоченных кучек червей, таких, что в i-ой кучке содержатся ai червей. 
Он пронумеровал всех этих червей последовательными целыми числами: черви в первой кучке пронумерованы числами от 1 до a1, черви во второй кучке пронумерованы числами от a1 + 1 до a1 + a2 и так далее. 
Смотрите пример для лучшего понимания.

Крот не может съесть всех червей (Сурок принёс их слишком много для того, чтобы съесть за один подход). 
К тому же, насколько мы знаем, Крот слепой — поэтому Сурок помогает ему, называ номера самых сочных червей. 
Сурок даст Кроту червяка, только если Крот правильно назовет кучку, в которой лежит червяк.

Крот просит вас ему помочь. Для всех сочных червей, которых назвал Сурок, подскажите Кроту правильные ответы.

Формат ввода
В первой строке записано единственное целое число n (1 ≤ n ≤ 105), количество кучек.

Во второй строке записано n целых чисел a1, a2, ..., an (1 ≤ ai ≤ 103, a1 + a2 + ... + an ≤ 106), где ai — количество червей в i-й кучке.

В третьей строке записано единственное целое число m (1 ≤ m ≤ 105), количество сочных червей, названных Сурком.

В четвертой строке записано m целых чисел q1, q2, ..., qm (1 ≤ qi ≤ a1 + a2 + ... + an) — номера сочных червей.

Формат вывода
Выведите m строк. В i-ой строке должно быть целое число — номер кучки, в которой лежит червяк под номером qi.



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace z3
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());
            int[] ff = new int[n];
            string[] kk = Console.ReadLine().Split();
            for (int y = 0; y < n; y++)
            {
                ff[y] = int.Parse(kk[y]);
            }
            int f = int.Parse(Console.ReadLine());
            int[] gg = new int[f];
            int x = 0;
            int[] lk1 = new int[n];
            int l = 0;
            int u = 0;
            int k = 0;
            int z = 0;
            int[] lk = new int[n];
            string[] ll = Console.ReadLine().Split();
            for (int w = 0; w < f; w++)
            {
                gg[w] = int.Parse(ll[w]);
            }
            for (int i = 0; i < n; i++)
            {
                lk1[i] = x + ff[i];
                x = lk1[i];
            }
            for (int i = 0; i < f; i++)
            {

                l = 0;
                u = 0;
                k = lk1[0] - ff[0] + 1;
                while (u == 0)
                {
                    if ((gg[i] >= k) && (gg[i] <= lk1[l])) u = l + 1;
                    else if ((gg[i] > k) && (gg[i] > lk1[l]))
                    {
                        l = 1;
                        if (gg[i] == lk1[i]) 
                        {
                            u = i + 1;
                            break;
                        }
                        if (gg[i]==99999)
                        {
                            u = 99999;
                            break;
                        }
                        while (gg[i] > lk1[l])
                        {
                            z = n - l;
                            if (l * 2 > n) l = n - 1;
                            else l *= 2;
                        }
                        if (l != n - 1) l /= 2;
                        else if (lk1[l] == gg[i]) continue;
                        else l = z;
                        while (u == 0)
                        {
                            if ((gg[i] >= lk1[l]-ff[l]+1) && (gg[i] <= lk1[l])) u = l + 1;
                            l++;
                        }

                    }
                }
                Console.WriteLine(u);
            }
            Console.ReadKey();
        }
    }
}
