Недавно на паре по информатике первокурсники МатФака узнали об расширенном алгоритме Евклида. 
Двое из них, Степан и Семен, пока ждали своей очереди на сдачу лабораторной работы придумали интересную игру. 
Изначально каждому игроку дано одно фиксированное целое положительное число, которое не меняется в процессе игры. 
Семену дано число a, Степану дано число b. Также у них есть кучка из n камней (сбегали к Волге, набрали на берегу).


Игроки ходят по очереди, первый ход делает Семен. 
На своем ходу игрок, делающий ход, должен взять из кучки число камней, равное наибольшему общему делителю данного ему числа и количества оставшихся камней в кучке. 
Проигрывает тот, кто не сможет взять требуемое число камней (по причине того, что в кучке остается строго меньше камней, чем нужно взять). 
Так у ребят подошла очередь на сдачу лаб, Ваша задача — по заданным a, b и n определить, кто выиграет в этой игре.

Формат ввода
В единственной строке через пробел записаны целые числа a, b и n (1 ≤ a, b, n ≤ 100) — числа, данные Семену и Антисемену соответственно, и исходное количество камней в кучке

Формат вывода
Если выиграет Семен, выведите 0, иначе выведите 1.


using System;

namespace ConsoleApp25
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] hu = Console.ReadLine().Split();
            int z = 800;
            int a = int.Parse(hu[0]);
            int b = int.Parse(hu[1]);
            int c = int.Parse(hu[2]);
            while (c > 0)
            {
                for (int j = c; j > 0; j--)
                {
                    if (z == 0) break;
                    if ((a % j == 0) && (c % j == 0))
                    {
                        c -= j;
                        z = 0;
                        break;
                    }
                }
                if (c > 0)
                    for (int h = c; h > 0; h--)
                    {
                        if (z == 1) break;
                        if ((b % h == 0) && (c % h == 0))
                        {
                            c -= h;
                            z = 1;
                            break;
                        }
                    }
            }
            Console.WriteLine(z);
            Console.ReadKey();
        }

    }
}
