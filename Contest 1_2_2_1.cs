Петя и Маша скучают на паре по линейной алгебре. 
Чтобы как-то развлечь себя, Петя достал лист клетчатой бумаги и нарисовал на ней n различных прямых, заданных уравнениями y=x+pi, для некоторых различных p1, p2, …, pn.

Маша не заставила себя ждать и нарисовала на том же листе m различных прямых, заданных уравнениями y=−x+qi для некоторых различных q1, q2, …, qm.

Пете и Маше интересно, сколько пар прямых пересекаются в точках с целочисленными координатами. 
К сожалению, до конца пары осталось мало времени, поэтому Петя и Маша просят вас помочь им.

Формат ввода
Первая строка содержит целое число t (1 ≤ t ≤ 1000) — количество наборов входных данных в тесте. Затем следуют описания наборов входных данных.

Первая строка каждого набора содержит целое число n (1 ≤ n ≤ 105) — количество прямых, которые нарисовал Петя.

Вторая строка каждого набора содержит n различных целых чисел pi (0 ≤ pi ≤ 109), описывающие прямые, нарисованные Петей. 
Число pi описывает прямую, заданную уравнением y = x + pi.

Третья строка каждого набора содержит целое число m (1 ≤ m ≤ 105) — количество прямых, которые нарисовала Маша.

Четвёртая строка каждого набора содержит m различных целых чисел qi (0 ≤ qi ≤ 109), описывающие прямые, нарисованные Машей. 
Число qi описывает прямую, заданную уравнением y = −x + qi.

Формат вывода
Для каждого набора входных данных выведите одно целое число — количество пар прямых, которые пересекаются в точке с целочисленными координатами.





using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp118
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());
            int[] count1 = new int[n];
            for (int i = 0; i < n; i++)
            {
                int n1 = int.Parse(Console.ReadLine());
                int[] kk = new int[n1];
                int kk12 = 0;
                int kk11 = 0;
                int kk21 = 0;
                int kk22 = 0;
                string[] pi = Console.ReadLine().Split();
                for (int j = 0; j < n1; j++)
                {
                    kk[j] = int.Parse(pi[j]);
                }
                int n2 = int.Parse(Console.ReadLine());
                int[] kk1 = new int[n2];
                string[] pi1 = Console.ReadLine().Split();
                for (int j = 0; j < n2; j++)
                {
                    kk1[j] = int.Parse(pi1[j]);
                    if (kk1[j] % 2 == 0) kk12 += 1;
                }
                kk11 = n2 - kk12;
                for (int j1 = 0; j1 < n1; j1++)
                {
                    if (kk[j1] % 2 == 0) kk22 += 1;
                }
                kk21 = n1 - kk22;
                count1[i] = kk12 * kk22 + kk11 * kk21;
            }
            for (int i = 0; i < n; i++)
            {
                Console.WriteLine(count1[i]);
            }
        }
    }
}


