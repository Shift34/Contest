Симметрия — слово греческого происхождения, как и многие другие слова, которые связаны с математикой. 
Оно означает соразмерность, наличие определённого порядка, закономерности в расположении частей. Смотря на объекты вокруг, мы не раз восклицаем: «Какая симметрия!»

Люди с давних времён использовали симметрию в рисунках, орнаментах, предметах быта, в архитектуре, художестве, строительстве. 
Но симметрия широко распространена и в природе, где не было вмешательства человеческой руки.
Её можно наблюдать в форме листьев и цветов растений, в расположении различных органов животных, в форме кристаллических тел, в порхающей бабочке, загадочной снежинке, морской звезде.


Pассмотрим две симметрии на плоскости: относительно точки и прямой.

Симметрию относительно точки называют центральной симметрией.

Точки M и M1 симметричны относительно некоторой точки O , если точка O является серединой отрезка MM1 .


Осевая симметрия — это симметрия относительно проведённой прямой (оси).

Точки M и M1 симметричны относительно некоторой прямой (оси симметрии), если эти точки лежат на прямой, перпендикулярной данной, и на одинаковом расстоянии от оси симметрии.

Постройте треугольник A1B1C1 , симметричный треугольнику ABC относительно центра (точки) O и треугольник A2B2C2 , симметричный треугольнику ABC относительно прямой L.

Формат ввода

Первая строка входного файла INPUT.TXT содержит 6 числ: x1, y1, x2, y2, x3, y3 – координаты вершин треугольника ABC;
Вторая строка входного файла содержит xО и yО – координаты точки О.
Третья строка входного файла содержит 4 числа: x4, y4, x5, y5 – координаты двух различных точек, через которые проходит прямая L.
Все числа во входном файле целые и не превосходят 108 по модулю.

Формат вывода
В выходной файл OUTPUT.TXT в первую строку выведите координаты вершин треугольника A1B1C1(симметричный треугольнику ABC относительно центра (точки) O.), во вторую строку координаты вершин треугольника A2B2C2(симметричный треугольнику ABC относительно прямой L). Ответ выводить с точностью три знака после запятой.







using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp118
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] pi = Console.ReadLine().Split();
            int[] r = new int[6];
            for (int i = 0; i < 6; i++)
            {
                r[i] = int.Parse(pi[i]);
            }
            string[] pi1 = Console.ReadLine().Split();
            int x0 = int.Parse(pi1[0]);
            int y0 = int.Parse(pi1[1]);
            string[] pi2 = Console.ReadLine().Split();
            int x4 = int.Parse(pi2[0]);
            int y4 = int.Parse(pi2[1]);
            int x5 = int.Parse(pi2[2]);
            int y5 = int.Parse(pi2[3]);
            for (int i = 0; i < 6; i++)
            {
                if (i % 2 == 0)
                {
                    Console.Write(x0 - r[i] + x0 + " ");
                }
                else
                {
                    Console.Write(y0 - r[i] + y0+" ");
                }
            }
            Console.WriteLine();
            for (int i = 0; i < 6; i++)
            {
                if (i % 2 == 0)
                {
                    double x = (Math.Pow(x4, 2) * r[i] - 2 * x4 * x5 * r[i] + Math.Pow(x5, 2) * r[i] + x5 * (y4 - y5) * (y4 - r[i+1]) - x4 * (y4 - y5) * (y5 - r[i+1])) / (Math.Pow(x4 - x5, 2) + Math.Pow(y4 - y5, 2));
                    Console.Write(x - r[i] + x+" ");
                }
                else
                {
                    double y = (Math.Pow(x5, 2) * y4 + Math.Pow(x4, 2) * y5 + x5 * r[i-1] * (y5 - y4) - x4 * (r[i-1] * (y5 - y4) + x5 * (y4 + y5)) + (y4 - y5) * (y4 - y5) * r[i]) / (Math.Pow(x4 - x5, 2) + Math.Pow(y4 - y5, 2));
                    Console.Write(y - r[i] + y + " ");
                }
            }
        }
    }
}
