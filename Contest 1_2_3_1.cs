Напомним, что числами Фибоначчи называется последовательность чисел, получаемая по следующему правилу: f0 = f1 = 1, fk = fk - 1 + fk - 2, где k > 1.
Фибоначчиева система счисления (ФСС) — это позиционная система счисления с алфавитом, состоящим из двух цифр: 0 и 1, а ее базисом является последовательность чисел Фибоначчи 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, … (f0 = 1 в базис не включается). 
В фибоначчиевой системе, как и во всех позиционных системах счисления, «вес» каждого разряда определяется соответствующим элементом базиса этой системы. Так, 10011fib = 1 × 8 + 0 × 5 + 0 × 3 + 1 × 2 + 1 × 1 = 11. 
Если не наложить дополнительных ограничений, то представление чисел в такой системе счисления оказывается неоднозначным. 
Например, 1110 = 1111fib = 10011fib = 10100fib Однако, нетрудно доказать, что существует единственное представление данного числа в фибоначчиевой системе счисления, которое не содержит двух единиц подряд. 
Такое представление называется каноническим. Требуется написать программу, которая для натурального числа N будет выводить его каноническое представление в ФСС.

Формат ввода
Во входном файле записано единственное число N (1 ≤ N ≤ 2*109).

Формат вывода
Единственная строка выходного файла должна содержать искомое представление.





using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp123
{
    class Program
    {
        static void Main(string[] args)
        {
            uint X = uint.Parse(Console.ReadLine());
            uint[] kk = new uint[1000];
            uint k = 0;
            kk[1] = 1;
            kk[2] = 2;
            if (X == 2) Console.WriteLine(10);
            else if (X == 1) Console.Write(1);
            else for (uint i = 3; i < 1000; i++)
            {
                    kk[i] = kk[i - 1] + kk[i - 2];
                    if (kk[i] > X) 
                    {
                        k = i - 1;
                        break;
                    }
                    if(kk[i] == X)
                    {
                        k = i;
                        break;
                    }
            }
            for(uint j = k; j > 0; j--)
            {
                if (X >= kk[j])
                {
                    Console.Write(1);
                    X-=kk[j];
                }
                else
                {
                    Console.Write(0);
                }
            }
        }
    }
}

