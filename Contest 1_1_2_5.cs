Однажды на лекции по теории чисел Лев Сергеевич Казарин рассказывал студентам про простые числа. 
Простым называется натуральное число, большее единицы и делящееся только на единицу и на само себя.

И вот, Лев Сергеевич решил дать студентам задачу: пусть дан отрезок [a; b].
Нужно найти такое простое число из этого отрезка, что сумма цифр у него максимальна. 
В случае, если таких чисел несколько, то ответом является наибольшее из них.

Решите задачу Льва Сергеевича для произвольного отрезка!

Формат ввода
Входной файл содержит два целых числа: a и b (1 ≤ a ≤ b ≤ 108); b - a ≤ 1000.

Формат вывода
В выходной файл выведите ответ на задачу. Если указанный отрезок не содержит простых чисел выведите в выходной файл -1.



using System;

namespace ConsoleApp22
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] bb = Console.ReadLine().Split();
            int a = int.Parse(bb[0]);
            int b = int.Parse(bb[1]);
            int otvet = -1;
            int j = 0;
            int k = 0;
            int maxsum = 0;
            int del = 0;
            for (int i = a; i <= b; i++)
            {
                del = 2;
                if (i == 1) del = 3;
                for (int y = 2; y <= (i / 32)+8; y++)
                    {
                    if ((i % y == 0) && (i != y) && (i != y * y)) del += 2;
                    if (y * y == i) del += 1;
                    if (del > 2) break;
                    }
                    if (del < 3)  
                    {
                        k = i;
                        j = 0;
                        while (k > 0)
                        {
                            j += k % 10;
                            k /= 10;
                        }
                        if (j >= maxsum)
                        {
                            maxsum = j;
                            otvet = i;
                        }
                    }

            }
            Console.WriteLine(otvet);
            Console.ReadKey();
        }

    }
}


