Фирма Vozug&Ko – всемирно известная фирма, организованная студентами математического факультета ЯрГУ. 
Заказчики ценят Vozug&Ko за надёжную и безошибочную работу: ещё ни разу их программы не выдавали никаких ошибок. 
Более того, программисты из фирмы Vozug&Ko готовы выполнить практически любой каприз заказчика: от консольных приложений до сложных систем виртуальной реальности. 
Любой проект, над которым работает фирма, для простоты нумеруется целым числом. 
Более того, каждый сотрудник может работать одновременно только над заданным числом проектов.

Как и у любой уважающей себя фирмы, у Vozug&Ko есть свой корпоративный портал. 
Корпоративный портал - это тоже проект и он тоже имеет свой номер. Причём, над корпоративным порталом работают абсолютно все сотрудники.

Ваш одногруппник успешно прошёл тестирование и его приняли на работу стажёром в Vozug&Ko. 
Так как он справился с заданиями на эту неделю в фирме, ему разрешили посмотреть в портале проекты, над которыми работают его коллеги. 
Ваш одногруппник скопировал списки проектов у некоторых сотрудников, и пытается узнать из этого списка номер проекта - корпоративного портала. 
Известно, что номер портала - минимально возможный. Ваш одногруппник не знает, как решить эту задачу, поэтому обратился за помощью к вам.

Помогите вашему одногруппнику! Определите номер проекта - корпоративного портала.

Формат ввода
В первой строке содержится число N - количество сотрудников (2 ≤ N ≤ 1000) и число M - количество проектов у каждого сотрудника (1 ≤ M ≤ 1000) В следующих N строках содержится по M чисел - номера проектов, над которыми работает текущий сотрудник. Номера проектов - целые неотрицательные числа, не превышающие 105. Гарантируется, что в каждой строке каждое число встречается только один раз.

Формат вывода
Выведите одно число - номер, соответствующий корпоративному порталу.

В случае, если условию удовлетворяют более одного номера, то выведите минимальный.




using System;

namespace ConsoleApp75
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] gg = Console.ReadLine().Split();
            int n = int.Parse(gg[0]);
            int y = int.Parse(gg[1]);
            int u = 0;
            int w = 0;
            int max = 0;
            int count=1;
            int[] nn = new int[n*y];
            for (int i = 0; i < n; i++)
            {
                string[] kk = Console.ReadLine().Split();
                for (int k = 0; k < y; k++)
                {
                    nn[i*y+k] = int.Parse(kk[k]);
                }
            }
            Array.Sort(nn);
            for (int i = 1; i < n * y; i++)
            {
                count = 1;
                if (y == 1)
                {
                    max = nn[i - 1];
                    break;
                } 
                while (u == 0)
                {
                    if ((i+1<n*y)&&(nn[i - 1] == nn[i]))
                    {
                        count++;
                        i++;
                        if (count == n)
                        {
                            max = nn[i-1];
                            break;
                        }
                    }
                    else break;
                }
                if (max > 0) break;
            }
            Console.WriteLine(max);
            Console.ReadKey();
        }
    }
}



