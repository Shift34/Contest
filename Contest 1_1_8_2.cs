Разработчики часто сталкиваются с понятием шаблона регулярных выражений. 
Под шаблоном обычно понимают строку-образец, состоящую из символов и метасимволов и задающую правило поиска. 
Такие шаблоны чаще всего используют для того, чтобы проверить, соответствует ли некоторая строка определенным правилам.

В этой задаче шаблоном будет называться строка, состоящая из маленьких латинских букв и знаков вопроса («?»). 
Знак вопроса в шаблоне — метасимвол, который обозначает произвольную маленькую букву латинского алфавита. 
Будем считать, что строка удовлетворяет шаблону, если из шаблона можно получить эту строку, заменив знаки вопроса на соответствующие символы. 
Например, строка aba удовлетворяет шаблонам: ???, ??a, a?a, aba.

Программисты компании R1 любят озадачить друг друга (и сами себя) головоломками. 
Одна из них выглядит следующим образом: заданы n строк-шаблонов одинаковой длины, нужно найти шаблон, содержащий как можно меньше знаков вопроса, который пересекается с каждым из заданных.
Два шаблона пересекаются, если существует строка, которая удовлетворяет и первому и второму шаблону. Сможете ли вы решить эту задачку?

Формат ввода
В первой строке задано единственное целое число n (1 ≤ n ≤ 105) — количество шаблонов. Далее в n строках заданы шаблоны.

Гарантируется, что шаблоны могут состоять только из маленьких букв латинского алфавита и символов «?». 
Все шаблоны непустые и имеют одинаковую длину. Суммарная длина всех шаблонов не превышает 105 символов.

Формат вывода
В единственной строке выведите ответ на задачу — шаблон с минимальным количеством знаков «?», который пересекается с каждым из заданных. 
Если существует несколько правильных ответов, выведите минимальный в лексикографическом порядке.

Пример 1





using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace ConsoleApp82
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] filename = File.ReadAllLines("input.txt");
            int k = Convert.ToInt32(filename[0]);
            string[] y = new string[k];
            int p = 1;
            int w = 0;
            for (int i = 0; i < k; i++)
            {
                y[i] = filename[p];
                p++;
            }
            int q = y[0].Length;
            char[] massage = new char[q];
            for (int j = 0; j < q; j++)
            {
                massage[j] ='?';
                w = 0;
                for (int i = 0; i < k; i++)
                {
                    char result = y[i][j];
                    if (result != massage[j]) 
                    {
                        if ((result != '?') && massage[j] != '?')
                        {
                            massage[j] = '?';
                            w +=1;
                            break;
                        }
                        else if (result != '?') massage[j] = result;
                    }
                }
                if ((w == 0) && (massage[j] == '?')) massage[j] = 'a';
            }
            string s = new string(massage);
            File.WriteAllText("output.txt", s);
            Console.ReadKey();
        }
    }
}
