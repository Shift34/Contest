Егор и Саша второгодники. Им на парах скучно, они все это слушали в прошлом году. 
И чтобы развлечься, они придумали игру в числа. На листе бумаги они написали N целых положительных чисел. 
Бросили монетку и определили, кто будет ходить первым, а кто – вторым. Сама игра состоит в том, что ребята по очереди дожны вычёркивать числа из последовательности. 
Вычеркнуть можно только число, находящееся в конце или начале последовательности. Каждое вычеркнутое число идёт в актив тому игроку, который его вычеркнул. 
Егору и Саше хочется набрать как можно больше очков, поэтому каждый всегда вычёркивает максимальное число. 
Они договорились, что если первое и последнее числа последовательности равны, то они будут вычёркивать первое. 
Игра продолжается до того момента, пока не будут вычеркнуты все числа. После окончания игры каждый игрок суммирует вычеркнутые им числа. 
Победителем объявляется тот, кто наберет больше очков. Сыграв несколько партий, ребята поняли, что результат в игре не зависит от стратегии игры. 
Они хотели написали программу, которая определяет счет игры, да не сумели. Одно слово - второгодники. 
Помогите Егору и Саше, напишите правильную программу, определяющую счет игры.

Формат ввода
В первой строке находится одно целое число N – количество чисел в последовательности(1 ≤ N ≤ 104).
Во второй строке находятся N целых положительных чисел из диапазона [1, 32000], разделённых пробелом.

Формат вывода
Выведите два числа, разделенные двоеточием.
Первое число – количество очков, набираемых первым игроком при игре на этом массиве, второе число – для второго.


using System;

namespace ConsoleApp36
{
    class Program
    {
        static void Main(string[] args)
        {
            int n = int.Parse(Console.ReadLine());
            int g = 0;
            int f = 0;
            int z = 0;
            int l = 0;
            int j = n-1;
            int[] ff = new int[n];
            string[] kk = Console.ReadLine().Split();
            for (int i=0;i<n;i++)
            {
                ff[i] = int.Parse(kk[i]);
            }
            int y = n- 1;
            int h = 0;
            while (g<=j)
            {
                if (ff[y] > ff[h])
                {
                    z = ff[y];
                    y -= 1;
                    g += 1;
                }
                else
                {
                    z = ff[h];
                    h += 1;
                    g += 1;
                }
                if (g % 2 == 1) f += z;
                else l += z;
            }
            Console.WriteLine("{0}:{1}", f, l);
            Console.ReadKey();

        }   
    }
}
