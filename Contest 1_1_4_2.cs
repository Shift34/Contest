Первокурсник МатФака Сергей хорошо выступил на олимпиаде по программированию ICPC и отобрался в четвертьфинал который пройдет в Санкт-Петербурге. 
На олимпиаду он поедет на поезде. Мальчик хочет перечитать учебник для подготовки к олимпиаде. Он посчитал, что ему для этого понадобится k часов. 
Также он выяснил, что освещение в поезде меняется каждый час. Освещение измеряется по шкале от 0 до 100, то есть 0 — совсем темно, а 100 — очень светло.

У Сергея есть расписание освещения в поезде на все n часов поездки — это n чисел от 0 до 100 каждое (уровень освещенности в первый час, во второй и так далее). 
В течение каждого из этих часов он будет либо читать весь час, либо не будет читать вообще. 
Он хочет выбрать k часов для чтения, не обязательно подряд, так, чтобы минимальный уровень освещенности в выбранные им часы для чтения был максимален. 
Сергей очень волнуется перед предстоящим соревнованием, помогите ему выбрать часы для чтения.

Формат ввода
В первой строке входного файла содержится два целых числа n и k (1 ≤ n ≤ 1000, 1 ≤ k ≤ n) — количество часов в поездке и количество часов для чтения соответственно. Во второй строке содержится n целых чисел ai (0 ≤ ai ≤ 100), разделенных пробелами, ai — уровень освещенности в i-ый час.

Формат вывода
В выходной файл в первую строку выведите минимальный уровень освещенности, при котором Сергей будет читать. 
Во вторую строку выведите k различных целых чисел b1, b2, ..., bk, разделенных пробелами, — номера часов, в которые Сергей будет читать (1 ≤ bi ≤ n). 
Часы нумеруются с 1. Если существует несколько оптимальных решений, выведите то в котором сумма номеров минимальна, а сами номера bi упорядочены по возрастанию.


using System;

namespace tuy
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] line = Console.ReadLine().Split();
            int n = int.Parse(line[0]);
            int k = int.Parse(line[1]);
            int j = 0;
            int i = 0;
            int l = 0;
            int q=0;
            int p=0;
            int[] array = new int[n];
            int[] cc = new int[n];
            string[] mas = Console.ReadLine().Split();
            while(i<n)
            {
                array[i] = int.Parse(mas[i]);
                i++;
            }
            Array.Copy(array, cc, n);
            Array.Sort(cc);
            int z = n - k;
            int min = cc[z];
            Console.WriteLine(min);
            int [] aa = new int[k];
            while (p<n)
            {
                if (array[p] > min)
                {
                    aa[j] = p + 1;
                    j++;
                }
                if (j == k) break;
                p++;
            }
            while (q<n)
            {
                if (array[q] == min)
                {
                    aa[j] = q + 1;
                    j++;
                }
                if (j == k) break;
                q++;
            }
            Array.Sort(aa);
            while (l<k)
            {
                Console.Write("{0} ",aa[l]);
                l++;
            }
            Console.ReadKey();
        }
    }
}
